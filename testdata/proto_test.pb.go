// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: proto_test.proto

package testdata

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestVarint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Int32   int32 `protobuf:"varint,1,opt,name=Int32,proto3" json:"Int32,omitempty"`
	Int64   int64 `protobuf:"varint,2,opt,name=Int64,proto3" json:"Int64,omitempty"`
	Boolean bool  `protobuf:"varint,3,opt,name=Boolean,proto3" json:"Boolean,omitempty"`
}

func (x *TestVarint) Reset() {
	*x = TestVarint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestVarint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestVarint) ProtoMessage() {}

func (x *TestVarint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestVarint.ProtoReflect.Descriptor instead.
func (*TestVarint) Descriptor() ([]byte, []int) {
	return file_proto_test_proto_rawDescGZIP(), []int{0}
}

func (x *TestVarint) GetInt32() int32 {
	if x != nil {
		return x.Int32
	}
	return 0
}

func (x *TestVarint) GetInt64() int64 {
	if x != nil {
		return x.Int64
	}
	return 0
}

func (x *TestVarint) GetBoolean() bool {
	if x != nil {
		return x.Boolean
	}
	return false
}

type TestVarintZigzag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sint32 int32 `protobuf:"zigzag32,1,opt,name=Sint32,proto3" json:"Sint32,omitempty"`
	Sint64 int64 `protobuf:"zigzag64,2,opt,name=Sint64,proto3" json:"Sint64,omitempty"`
}

func (x *TestVarintZigzag) Reset() {
	*x = TestVarintZigzag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_test_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestVarintZigzag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestVarintZigzag) ProtoMessage() {}

func (x *TestVarintZigzag) ProtoReflect() protoreflect.Message {
	mi := &file_proto_test_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestVarintZigzag.ProtoReflect.Descriptor instead.
func (*TestVarintZigzag) Descriptor() ([]byte, []int) {
	return file_proto_test_proto_rawDescGZIP(), []int{1}
}

func (x *TestVarintZigzag) GetSint32() int32 {
	if x != nil {
		return x.Sint32
	}
	return 0
}

func (x *TestVarintZigzag) GetSint64() int64 {
	if x != nil {
		return x.Sint64
	}
	return 0
}

type TestLengthDelimited struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str   string `protobuf:"bytes,1,opt,name=Str,proto3" json:"Str,omitempty"`
	Bytes []byte `protobuf:"bytes,2,opt,name=Bytes,proto3" json:"Bytes,omitempty"`
}

func (x *TestLengthDelimited) Reset() {
	*x = TestLengthDelimited{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_test_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestLengthDelimited) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestLengthDelimited) ProtoMessage() {}

func (x *TestLengthDelimited) ProtoReflect() protoreflect.Message {
	mi := &file_proto_test_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestLengthDelimited.ProtoReflect.Descriptor instead.
func (*TestLengthDelimited) Descriptor() ([]byte, []int) {
	return file_proto_test_proto_rawDescGZIP(), []int{2}
}

func (x *TestLengthDelimited) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

func (x *TestLengthDelimited) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type Test64Bit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fixed64  uint64  `protobuf:"fixed64,1,opt,name=Fixed64,proto3" json:"Fixed64,omitempty"`
	Sfixed64 int64   `protobuf:"fixed64,2,opt,name=Sfixed64,proto3" json:"Sfixed64,omitempty"`
	Double   float64 `protobuf:"fixed64,3,opt,name=Double,proto3" json:"Double,omitempty"`
}

func (x *Test64Bit) Reset() {
	*x = Test64Bit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_test_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test64Bit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test64Bit) ProtoMessage() {}

func (x *Test64Bit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_test_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test64Bit.ProtoReflect.Descriptor instead.
func (*Test64Bit) Descriptor() ([]byte, []int) {
	return file_proto_test_proto_rawDescGZIP(), []int{3}
}

func (x *Test64Bit) GetFixed64() uint64 {
	if x != nil {
		return x.Fixed64
	}
	return 0
}

func (x *Test64Bit) GetSfixed64() int64 {
	if x != nil {
		return x.Sfixed64
	}
	return 0
}

func (x *Test64Bit) GetDouble() float64 {
	if x != nil {
		return x.Double
	}
	return 0
}

type Test32Bit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fixed32  uint32  `protobuf:"fixed32,1,opt,name=Fixed32,proto3" json:"Fixed32,omitempty"`
	Sfixed32 int32   `protobuf:"fixed32,2,opt,name=Sfixed32,proto3" json:"Sfixed32,omitempty"`
	Float    float32 `protobuf:"fixed32,3,opt,name=Float,proto3" json:"Float,omitempty"`
}

func (x *Test32Bit) Reset() {
	*x = Test32Bit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_test_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test32Bit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test32Bit) ProtoMessage() {}

func (x *Test32Bit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_test_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test32Bit.ProtoReflect.Descriptor instead.
func (*Test32Bit) Descriptor() ([]byte, []int) {
	return file_proto_test_proto_rawDescGZIP(), []int{4}
}

func (x *Test32Bit) GetFixed32() uint32 {
	if x != nil {
		return x.Fixed32
	}
	return 0
}

func (x *Test32Bit) GetSfixed32() int32 {
	if x != nil {
		return x.Sfixed32
	}
	return 0
}

func (x *Test32Bit) GetFloat() float32 {
	if x != nil {
		return x.Float
	}
	return 0
}

type TestEmbed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmbedVarint          *TestVarint          `protobuf:"bytes,1,opt,name=embedVarint,proto3" json:"embedVarint,omitempty"`
	EmbedLengthDelimited *TestLengthDelimited `protobuf:"bytes,2,opt,name=embedLengthDelimited,proto3" json:"embedLengthDelimited,omitempty"`
	Embed64Bit           *Test64Bit           `protobuf:"bytes,3,opt,name=embed64Bit,proto3" json:"embed64Bit,omitempty"`
}

func (x *TestEmbed) Reset() {
	*x = TestEmbed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_test_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestEmbed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestEmbed) ProtoMessage() {}

func (x *TestEmbed) ProtoReflect() protoreflect.Message {
	mi := &file_proto_test_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestEmbed.ProtoReflect.Descriptor instead.
func (*TestEmbed) Descriptor() ([]byte, []int) {
	return file_proto_test_proto_rawDescGZIP(), []int{5}
}

func (x *TestEmbed) GetEmbedVarint() *TestVarint {
	if x != nil {
		return x.EmbedVarint
	}
	return nil
}

func (x *TestEmbed) GetEmbedLengthDelimited() *TestLengthDelimited {
	if x != nil {
		return x.EmbedLengthDelimited
	}
	return nil
}

func (x *TestEmbed) GetEmbed64Bit() *Test64Bit {
	if x != nil {
		return x.Embed64Bit
	}
	return nil
}

type TestRepeated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Int64               []int64                `protobuf:"varint,1,rep,packed,name=Int64,proto3" json:"Int64,omitempty"`
	Fixed64             []uint64               `protobuf:"fixed64,2,rep,packed,name=Fixed64,proto3" json:"Fixed64,omitempty"`
	Fixed32             []uint32               `protobuf:"fixed32,3,rep,packed,name=Fixed32,proto3" json:"Fixed32,omitempty"`
	Str                 []string               `protobuf:"bytes,4,rep,name=Str,proto3" json:"Str,omitempty"`
	Bytes               [][]byte               `protobuf:"bytes,5,rep,name=Bytes,proto3" json:"Bytes,omitempty"`
	TestLengthDelimited []*TestLengthDelimited `protobuf:"bytes,6,rep,name=TestLengthDelimited,proto3" json:"TestLengthDelimited,omitempty"`
}

func (x *TestRepeated) Reset() {
	*x = TestRepeated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_test_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRepeated) ProtoMessage() {}

func (x *TestRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_test_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRepeated.ProtoReflect.Descriptor instead.
func (*TestRepeated) Descriptor() ([]byte, []int) {
	return file_proto_test_proto_rawDescGZIP(), []int{6}
}

func (x *TestRepeated) GetInt64() []int64 {
	if x != nil {
		return x.Int64
	}
	return nil
}

func (x *TestRepeated) GetFixed64() []uint64 {
	if x != nil {
		return x.Fixed64
	}
	return nil
}

func (x *TestRepeated) GetFixed32() []uint32 {
	if x != nil {
		return x.Fixed32
	}
	return nil
}

func (x *TestRepeated) GetStr() []string {
	if x != nil {
		return x.Str
	}
	return nil
}

func (x *TestRepeated) GetBytes() [][]byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *TestRepeated) GetTestLengthDelimited() []*TestLengthDelimited {
	if x != nil {
		return x.TestLengthDelimited
	}
	return nil
}

var File_proto_test_proto protoreflect.FileDescriptor

var file_proto_test_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x22, 0x52, 0x0a, 0x0a,
	0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e,
	0x22, 0x42, 0x0a, 0x10, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x72, 0x69, 0x6e, 0x74, 0x5a, 0x69,
	0x67, 0x7a, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x53, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x53, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x22, 0x3d, 0x0a, 0x13, 0x54, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x53,
	0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x74, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x09, 0x54, 0x65, 0x73, 0x74, 0x36, 0x34, 0x42, 0x69, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x07, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x10, 0x52, 0x08, 0x53, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x22, 0x57,
	0x0a, 0x09, 0x54, 0x65, 0x73, 0x74, 0x33, 0x32, 0x42, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x07, 0x46, 0x69,
	0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33,
	0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x08, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33,
	0x32, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x09, 0x54, 0x65, 0x73, 0x74,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x0b, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x56, 0x61,
	0x72, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x56, 0x61, 0x72, 0x69, 0x6e, 0x74,
	0x52, 0x0b, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x56, 0x61, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x51, 0x0a,
	0x14, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x44, 0x65, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x52, 0x14, 0x65, 0x6d, 0x62, 0x65,
	0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64,
	0x12, 0x33, 0x0a, 0x0a, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x36, 0x34, 0x42, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x54, 0x65, 0x73, 0x74, 0x36, 0x34, 0x42, 0x69, 0x74, 0x52, 0x0a, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x36, 0x34, 0x42, 0x69, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x07,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x02, 0x20, 0x03, 0x28, 0x06, 0x52, 0x07, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33,
	0x32, 0x18, 0x03, 0x20, 0x03, 0x28, 0x07, 0x52, 0x07, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32,
	0x12, 0x10, 0x0a, 0x03, 0x53, 0x74, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x53,
	0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x13, 0x54, 0x65, 0x73, 0x74,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x54, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x65, 0x64, 0x52, 0x13, 0x54, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x44, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2e, 0x2f,
	0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_test_proto_rawDescOnce sync.Once
	file_proto_test_proto_rawDescData = file_proto_test_proto_rawDesc
)

func file_proto_test_proto_rawDescGZIP() []byte {
	file_proto_test_proto_rawDescOnce.Do(func() {
		file_proto_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_test_proto_rawDescData)
	})
	return file_proto_test_proto_rawDescData
}

var file_proto_test_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_test_proto_goTypes = []interface{}{
	(*TestVarint)(nil),          // 0: testdata.TestVarint
	(*TestVarintZigzag)(nil),    // 1: testdata.TestVarintZigzag
	(*TestLengthDelimited)(nil), // 2: testdata.TestLengthDelimited
	(*Test64Bit)(nil),           // 3: testdata.Test64Bit
	(*Test32Bit)(nil),           // 4: testdata.Test32Bit
	(*TestEmbed)(nil),           // 5: testdata.TestEmbed
	(*TestRepeated)(nil),        // 6: testdata.TestRepeated
}
var file_proto_test_proto_depIdxs = []int32{
	0, // 0: testdata.TestEmbed.embedVarint:type_name -> testdata.TestVarint
	2, // 1: testdata.TestEmbed.embedLengthDelimited:type_name -> testdata.TestLengthDelimited
	3, // 2: testdata.TestEmbed.embed64Bit:type_name -> testdata.Test64Bit
	2, // 3: testdata.TestRepeated.TestLengthDelimited:type_name -> testdata.TestLengthDelimited
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_test_proto_init() }
func file_proto_test_proto_init() {
	if File_proto_test_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_test_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestVarint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_test_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestVarintZigzag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_test_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestLengthDelimited); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_test_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test64Bit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_test_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test32Bit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_test_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestEmbed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_test_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestRepeated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_test_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_test_proto_goTypes,
		DependencyIndexes: file_proto_test_proto_depIdxs,
		MessageInfos:      file_proto_test_proto_msgTypes,
	}.Build()
	File_proto_test_proto = out.File
	file_proto_test_proto_rawDesc = nil
	file_proto_test_proto_goTypes = nil
	file_proto_test_proto_depIdxs = nil
}
